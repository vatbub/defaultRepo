<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fokprojects</groupId>
	<artifactId>parentPom</artifactId>
	<version>0.0.7-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>FOKProjects Parent Pom</name>
	<description>A global pom for all fok projects</description>

	<licenses>
		<license>
			<name>Apache 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>fokRelease</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
		<license>
			<name>Apache 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>fokSnapshots</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>bintray</name>
			<url>http://jcenter.bintray.com</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>bintray-plugins</name>
			<url>http://jcenter.bintray.com</url>
		</pluginRepository>
	</pluginRepositories>

	<organization>
		<name>Frederik Kammel</name>
		<url>http://fokprojects.mo-mar.de/</url>
	</organization>

	<dependencies>
		<dependency>
			<groupId>no.tornado</groupId>
			<artifactId>fxlauncher</artifactId>
			<version>1.0.11</version>
		</dependency>
	</dependencies>

	<properties>
		<maven.build.timestamp.format>yyyyMMdd_HHmm</maven.build.timestamp.format>
		<!-- Access the build timestamp with ${maven.build.timestamp} -->

		<!-- Installer Filename without suffix -->
		<app.filename>${project.groupId}${project.artifactId}</app.filename>

		<!-- The JavaFX Application class name -->
		<!-- Set this one in the actual project -->
		<!-- <app.mainClass>no.tornado.FxlDemo</app.mainClass> -->

		<!-- Optional override to specify where the cached files are stored. Default 
			is current working directory -->
		<!-- <app.cacheDir>USERLIB/FxlDemo</app.cacheDir> -->

		<!-- The Application vendor used by javapackager -->
		<app.vendor>FOKProjects</app.vendor>

		<!-- The Application version used by javapackager -->
		<app.version>${project.version}</app.version>

		<!-- Base URL where you will host the application artifacts -->
		<app.url>http://dl.bintray.com/vatbub/fokprojectsSnapshots/${project.groupId}/${project.artifactId}</app.url>

		<!-- The app and launcher will be assembled in this folder -->
		<app.dir>${project.build.directory}/app</app.dir>

		<!-- Native installers will be built in this folder -->
		<app.installerdir>${project.build.directory}/installer</app.installerdir>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<distributionManagement>
		<repository>
			<id>bintray-vatbub-fokprojectsSnapshots</id>
			<name>vatbub-fokprojectsSnapshots</name>
			<url>https://api.bintray.com/maven/vatbub/fokprojectsSnapshots/${project.artifactId}</url>
		</repository>
		<snapshotRepository>
			<id>bintray-vatbub-fokprojectsSnapshots</id>
			<name>vatbub-fokprojectsSnapshots</name>
			<url>https://oss.jfrog.org/artifactory/oss-snapshot-local</url>
		</snapshotRepository>
	</distributionManagement>

	<scm>
		<connection>scm:git:git@github.com:vatbub/defaultRepo.git</connection>
		<url>scm:git:git@github.com:vatbub/defaultRepo.git</url>
		<developerConnection>scm:git:git@github.com:vatbub/defaultRepo.git</developerConnection>
		<tag>testRelease</tag>
	</scm>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.8</version>
				<configuration>
					<licenseName>apache_v2</licenseName>
				</configuration>
				<executions>
					<execution>
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<outputDirectory>${app.dir}</outputDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<excludeScope>provided</excludeScope>
					<outputDirectory>${app.dir}</outputDirectory>
					<stripVersion>true</stripVersion>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<!-- Generate app.xml manifest -->
				<executions>
					<execution>
						<id>create-manifest</id>
						<phase>package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>fxlauncher.CreateManifest</mainClass>
							<arguments>
								<argument>${app.url}</argument>
								<argument>${app.mainClass}</argument>
								<argument>${app.dir}</argument>
								<!-- Remove this line if you haven't specified app.cacheDir -->
								<argument>--cache-dir=${app.cacheDir}</argument>
								<argument>${app.parameters}</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Embed app.xml inside fxlauncher.xml so we don't need to reference 
						app.xml to start the app -->
					<execution>
						<id>embed-manifest-in-launcher</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>jar</executable>
							<workingDirectory>${app.dir}</workingDirectory>
							<arguments>
								<argument>uf</argument>
								<argument>fxlauncher.jar</argument>
								<argument>app.xml</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Create native installer. Feel free to add more arguments as needed. 
						https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javapackager.html -->
					<execution>
						<id>installer</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>javapackager</executable>

							<arguments>
								<argument>-deploy</argument>
								<argument>-native</argument>
								<argument>-outdir</argument>
								<argument>${app.installerdir}</argument>
								<argument>-outfile</argument>
								<argument>${app.filename}</argument>
								<argument>-srcdir</argument>
								<argument>${app.dir}</argument>
								<argument>-srcfiles</argument>
								<argument>fxlauncher.jar</argument>
								<argument>-appclass</argument>
								<argument>fxlauncher.Launcher</argument>
								<argument>-name</argument>
								<argument>${project.name}</argument>
								<argument>-title</argument>
								<argument>${project.name}</argument>
								<argument>-vendor</argument>
								<argument>${app.vendor}</argument>
								<argument>-BappVersion=${app.version}</argument>
								<argument>-Bidentifier=${project.groupId}.${project.artifactId}</argument>
							</arguments>
						</configuration>
					</execution>
					<!-- Copy application artifacts to remote site using scp (optional) -->
					<execution>
						<id>deploy-app</id>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>scp</executable>
							<arguments>
								<argument>-r</argument>
								<argument>${app.dir}/.</argument>
								<argument>${app.deploy.target}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<goals>deploy</goals>
					<autoversionsubmodules>true</autoversionsubmodules>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
								</manifest>
								<manifestEntries>
									<Specification-Version>${project.version} -
										${maven.build.timestamp}</Specification-Version>
									<Implementation-Version>${project.version} -
										${maven.build.timestamp}</Implementation-Version>
								</manifestEntries>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.jfrog.buildinfo</groupId> <artifactId>artifactory-maven-plugin</artifactId> 
				<version>2.4.0</version> <inherited>false</inherited> <executions> <execution> 
				<id>build-info</id> <goals> <goal>publish</goal> </goals> <configuration> 
				<deployProperties> <gradle>awesome</gradle> <review.team>qa</review.team> 
				</deployProperties> <publisher> <contextUrl>https://oss.jfrog.org</contextUrl> 
				<username>deployer</username> <password>{DESede}...</password> <repoKey>libs-release-local</repoKey> 
				<snapshotRepoKey>libs-snapshot-local</snapshotRepoKey> </publisher> </configuration> 
				</execution> </executions> </plugin> -->
		</plugins>
	</build>
</project>